services:
  mono-api:
    container_name: mono-api
    ports:
      - 8080:${PORT}
      - 2345:${DEBUGGING_PORT}
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    volumes:
      - .:/app/server
    env_file:
      - .env
  mono-db:
    container_name: mono-db
    image: postgres:16
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - db-data:/var/lib/postgresql/data
  mono-redis:
    container_name: mono-redis
    build:
      context: ./redis
    volumes:
      - redisdata:/data
  minio:
    container_name: minio
    image: minio/minio:RELEASE.2024-05-10T01-41-38Z
    volumes:
      - minio:/data
    ports:
      - "9090:9000"
      - "9091:9001"
    environment:
      - MINIO_ROOT_USER=miniominio
      - MINIO_ROOT_PASSWORD=miniominio
    command: ['minio', 'server', '/data', '--console-address', ':9001']
  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://minio:9000 miniominio miniominio) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc mb minio/default-bucket;
      /usr/bin/mc policy download minio/default-bucket;
      /usr/bin/mc anonymous set public minio/default-bucket;
      exit 0;
      "

volumes:
  db-data:
  redisdata:
  minio:
