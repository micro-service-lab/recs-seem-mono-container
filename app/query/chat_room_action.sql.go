// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: chat_room_action.sql

package query

import (
	"context"
	"time"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

const countChatRoomActions = `-- name: CountChatRoomActions :one
SELECT COUNT(*) FROM t_chat_room_actions
WHERE
	CASE WHEN $1::boolean = true THEN chat_room_action_type_id = ANY($2::uuid[]) ELSE TRUE END
`

type CountChatRoomActionsParams struct {
	WhereInChatRoomActionTypeIds bool        `json:"where_in_chat_room_action_type_ids"`
	InChatRoomActionTypeIds      []uuid.UUID `json:"in_chat_room_action_type_ids"`
}

func (q *Queries) CountChatRoomActions(ctx context.Context, arg CountChatRoomActionsParams) (int64, error) {
	row := q.db.QueryRow(ctx, countChatRoomActions, arg.WhereInChatRoomActionTypeIds, arg.InChatRoomActionTypeIds)
	var count int64
	err := row.Scan(&count)
	return count, err
}

const createChatRoomAction = `-- name: CreateChatRoomAction :one
INSERT INTO t_chat_room_actions (chat_room_id, chat_room_action_type_id, acted_at) VALUES ($1, $2, $3) RETURNING t_chat_room_actions_pkey, chat_room_action_id, chat_room_id, chat_room_action_type_id, acted_at
`

type CreateChatRoomActionParams struct {
	ChatRoomID           uuid.UUID `json:"chat_room_id"`
	ChatRoomActionTypeID uuid.UUID `json:"chat_room_action_type_id"`
	ActedAt              time.Time `json:"acted_at"`
}

func (q *Queries) CreateChatRoomAction(ctx context.Context, arg CreateChatRoomActionParams) (ChatRoomAction, error) {
	row := q.db.QueryRow(ctx, createChatRoomAction, arg.ChatRoomID, arg.ChatRoomActionTypeID, arg.ActedAt)
	var i ChatRoomAction
	err := row.Scan(
		&i.TChatRoomActionsPkey,
		&i.ChatRoomActionID,
		&i.ChatRoomID,
		&i.ChatRoomActionTypeID,
		&i.ActedAt,
	)
	return i, err
}

type CreateChatRoomActionsParams struct {
	ChatRoomID           uuid.UUID `json:"chat_room_id"`
	ChatRoomActionTypeID uuid.UUID `json:"chat_room_action_type_id"`
	ActedAt              time.Time `json:"acted_at"`
}

const deleteChatRoomAction = `-- name: DeleteChatRoomAction :execrows
DELETE FROM t_chat_room_actions WHERE chat_room_action_id = $1
`

func (q *Queries) DeleteChatRoomAction(ctx context.Context, chatRoomActionID uuid.UUID) (int64, error) {
	result, err := q.db.Exec(ctx, deleteChatRoomAction, chatRoomActionID)
	if err != nil {
		return 0, err
	}
	return result.RowsAffected(), nil
}

const getChatRoomActionsOnChatRoom = `-- name: GetChatRoomActionsOnChatRoom :many
SELECT t_chat_room_actions.t_chat_room_actions_pkey, t_chat_room_actions.chat_room_action_id, t_chat_room_actions.chat_room_id, t_chat_room_actions.chat_room_action_type_id, t_chat_room_actions.acted_at,
t_chat_room_create_actions.chat_room_create_action_id, t_chat_room_create_actions.name create_name, cm.member_id create_member_id, cm.name create_member_name, cm.first_name create_member_first_name, cm.last_name create_member_last_name, cm.email create_member_email, cm.profile_image_id create_member_profile_image_id,
t_chat_room_update_name_actions.chat_room_update_name_action_id, t_chat_room_update_name_actions.name update_name, um.member_id update_member_id, um.name update_member_name, um.first_name update_member_first_name, um.last_name update_member_last_name, um.email update_member_email, um.profile_image_id update_member_profile_image_id,
t_chat_room_withdraw_actions.chat_room_withdraw_action_id, wm.member_id withdraw_member_id, wm.name withdraw_member_name, wm.first_name withdraw_member_first_name, wm.last_name withdraw_member_last_name, wm.email withdraw_member_email, wm.profile_image_id withdraw_member_profile_image_id,
t_chat_room_add_member_actions.chat_room_add_member_action_id, am.member_id add_member_id, am.name add_member_name, am.first_name add_member_first_name, am.last_name add_member_last_name, am.email add_member_email, am.profile_image_id add_member_profile_image_id,
t_chat_room_remove_member_actions.chat_room_remove_member_action_id, rm.member_id remove_member_id, rm.name remove_member_name, rm.first_name remove_member_first_name, rm.last_name remove_member_last_name, rm.email remove_member_email, rm.profile_image_id remove_member_profile_image_id,
t_messages.message_id, t_messages.sender_id message_sender_id, t_messages.body message_body, t_messages.posted_at message_posted_at, t_messages.last_edited_at message_last_edited_at,
mm.name message_sender_name, mm.first_name message_sender_first_name, mm.last_name message_sender_last_name, mm.email message_sender_email, mm.profile_image_id message_sender_profile_image_id,
t_images.height message_sender_profile_image_height, t_images.width message_sender_profile_image_width, t_images.attachable_item_id message_sender_profile_image_attachable_item_id,
t_attachable_items.owner_id message_sender_profile_image_owner_id, t_attachable_items.from_outer message_sender_profile_image_from_outer, t_attachable_items.alias message_sender_profile_image_alias,
t_attachable_items.url message_sender_profile_image_url, t_attachable_items.size message_sender_profile_image_size, t_attachable_items.mime_type_id message_sender_profile_image_mime_type_id
FROM t_chat_room_actions
LEFT JOIN t_chat_room_create_actions ON t_chat_room_actions.chat_room_action_id = t_chat_room_create_actions.chat_room_action_id
LEFT JOIN m_members cm ON t_chat_room_create_actions.created_by = m_members.member_id
LEFT JOIN t_chat_room_update_name_actions ON t_chat_room_actions.chat_room_action_id = t_chat_room_update_name_actions.chat_room_action_id
LEFT JOIN m_members um ON t_chat_room_update_name_actions.updated_by = um.member_id
LEFT JOIN t_chat_room_withdraw_actions ON t_chat_room_actions.chat_room_action_id = t_chat_room_withdraw_actions.chat_room_action_id
LEFT JOIN m_members wm ON t_chat_room_withdraw_actions.member_id = wm.member_id
LEFT JOIN t_chat_room_add_member_actions ON t_chat_room_actions.chat_room_action_id = t_chat_room_add_member_actions.chat_room_action_id
LEFT JOIN m_members am ON t_chat_room_add_member_actions.added_by = am.member_id
LEFT JOIN t_chat_room_remove_member_actions ON t_chat_room_actions.chat_room_action_id = t_chat_room_remove_member_actions.chat_room_action_id
LEFT JOIN m_members rm ON t_chat_room_remove_member_actions.removed_by = rm.member_id
LEFT JOIN t_messages ON t_chat_room_actions.chat_room_action_id = t_messages.chat_room_action_id
LEFT JOIN m_members mm ON t_messages.member_id = mm.member_id
LEFT JOIN t_images ON mm.chat_room_action_id = t_images.chat_room_action_id
LEFT JOIN t_attachable_items ON t_images.attachable_item_id = t_attachable_items.attachable_item_id
WHERE t_chat_room_actions.chat_room_id = $1
AND
	CASE WHEN $2::boolean = true THEN chat_room_action_type_id = ANY($3::uuid[]) ELSE TRUE END
ORDER BY
	CASE WHEN $4::text = 'acted_at' THEN acted_at END ASC,
	CASE WHEN $4::text = 'r_acted_at' THEN acted_at END DESC,
	t_chat_room_actions_pkey ASC
`

type GetChatRoomActionsOnChatRoomParams struct {
	ChatRoomID                   uuid.UUID   `json:"chat_room_id"`
	WhereInChatRoomActionTypeIds bool        `json:"where_in_chat_room_action_type_ids"`
	InChatRoomActionTypeIds      []uuid.UUID `json:"in_chat_room_action_type_ids"`
	OrderMethod                  string      `json:"order_method"`
}

type GetChatRoomActionsOnChatRoomRow struct {
	TChatRoomActionsPkey                      pgtype.Int8        `json:"t_chat_room_actions_pkey"`
	ChatRoomActionID                          uuid.UUID          `json:"chat_room_action_id"`
	ChatRoomID                                uuid.UUID          `json:"chat_room_id"`
	ChatRoomActionTypeID                      uuid.UUID          `json:"chat_room_action_type_id"`
	ActedAt                                   time.Time          `json:"acted_at"`
	ChatRoomCreateActionID                    pgtype.UUID        `json:"chat_room_create_action_id"`
	CreateName                                pgtype.Text        `json:"create_name"`
	CreateMemberID                            pgtype.UUID        `json:"create_member_id"`
	CreateMemberName                          pgtype.Text        `json:"create_member_name"`
	CreateMemberFirstName                     pgtype.Text        `json:"create_member_first_name"`
	CreateMemberLastName                      pgtype.Text        `json:"create_member_last_name"`
	CreateMemberEmail                         pgtype.Text        `json:"create_member_email"`
	CreateMemberProfileImageID                pgtype.UUID        `json:"create_member_profile_image_id"`
	ChatRoomUpdateNameActionID                pgtype.UUID        `json:"chat_room_update_name_action_id"`
	UpdateName                                pgtype.Text        `json:"update_name"`
	UpdateMemberID                            pgtype.UUID        `json:"update_member_id"`
	UpdateMemberName                          pgtype.Text        `json:"update_member_name"`
	UpdateMemberFirstName                     pgtype.Text        `json:"update_member_first_name"`
	UpdateMemberLastName                      pgtype.Text        `json:"update_member_last_name"`
	UpdateMemberEmail                         pgtype.Text        `json:"update_member_email"`
	UpdateMemberProfileImageID                pgtype.UUID        `json:"update_member_profile_image_id"`
	ChatRoomWithdrawActionID                  pgtype.UUID        `json:"chat_room_withdraw_action_id"`
	WithdrawMemberID                          pgtype.UUID        `json:"withdraw_member_id"`
	WithdrawMemberName                        pgtype.Text        `json:"withdraw_member_name"`
	WithdrawMemberFirstName                   pgtype.Text        `json:"withdraw_member_first_name"`
	WithdrawMemberLastName                    pgtype.Text        `json:"withdraw_member_last_name"`
	WithdrawMemberEmail                       pgtype.Text        `json:"withdraw_member_email"`
	WithdrawMemberProfileImageID              pgtype.UUID        `json:"withdraw_member_profile_image_id"`
	ChatRoomAddMemberActionID                 pgtype.UUID        `json:"chat_room_add_member_action_id"`
	AddMemberID                               pgtype.UUID        `json:"add_member_id"`
	AddMemberName                             pgtype.Text        `json:"add_member_name"`
	AddMemberFirstName                        pgtype.Text        `json:"add_member_first_name"`
	AddMemberLastName                         pgtype.Text        `json:"add_member_last_name"`
	AddMemberEmail                            pgtype.Text        `json:"add_member_email"`
	AddMemberProfileImageID                   pgtype.UUID        `json:"add_member_profile_image_id"`
	ChatRoomRemoveMemberActionID              pgtype.UUID        `json:"chat_room_remove_member_action_id"`
	RemoveMemberID                            pgtype.UUID        `json:"remove_member_id"`
	RemoveMemberName                          pgtype.Text        `json:"remove_member_name"`
	RemoveMemberFirstName                     pgtype.Text        `json:"remove_member_first_name"`
	RemoveMemberLastName                      pgtype.Text        `json:"remove_member_last_name"`
	RemoveMemberEmail                         pgtype.Text        `json:"remove_member_email"`
	RemoveMemberProfileImageID                pgtype.UUID        `json:"remove_member_profile_image_id"`
	MessageID                                 pgtype.UUID        `json:"message_id"`
	MessageSenderID                           pgtype.UUID        `json:"message_sender_id"`
	MessageBody                               pgtype.Text        `json:"message_body"`
	MessagePostedAt                           pgtype.Timestamptz `json:"message_posted_at"`
	MessageLastEditedAt                       pgtype.Timestamptz `json:"message_last_edited_at"`
	MessageSenderName                         pgtype.Text        `json:"message_sender_name"`
	MessageSenderFirstName                    pgtype.Text        `json:"message_sender_first_name"`
	MessageSenderLastName                     pgtype.Text        `json:"message_sender_last_name"`
	MessageSenderEmail                        pgtype.Text        `json:"message_sender_email"`
	MessageSenderProfileImageID               pgtype.UUID        `json:"message_sender_profile_image_id"`
	MessageSenderProfileImageHeight           pgtype.Float8      `json:"message_sender_profile_image_height"`
	MessageSenderProfileImageWidth            pgtype.Float8      `json:"message_sender_profile_image_width"`
	MessageSenderProfileImageAttachableItemID pgtype.UUID        `json:"message_sender_profile_image_attachable_item_id"`
	MessageSenderProfileImageOwnerID          pgtype.UUID        `json:"message_sender_profile_image_owner_id"`
	MessageSenderProfileImageFromOuter        pgtype.Bool        `json:"message_sender_profile_image_from_outer"`
	MessageSenderProfileImageAlias            pgtype.Text        `json:"message_sender_profile_image_alias"`
	MessageSenderProfileImageUrl              pgtype.Text        `json:"message_sender_profile_image_url"`
	MessageSenderProfileImageSize             pgtype.Float8      `json:"message_sender_profile_image_size"`
	MessageSenderProfileImageMimeTypeID       pgtype.UUID        `json:"message_sender_profile_image_mime_type_id"`
}

func (q *Queries) GetChatRoomActionsOnChatRoom(ctx context.Context, arg GetChatRoomActionsOnChatRoomParams) ([]GetChatRoomActionsOnChatRoomRow, error) {
	rows, err := q.db.Query(ctx, getChatRoomActionsOnChatRoom,
		arg.ChatRoomID,
		arg.WhereInChatRoomActionTypeIds,
		arg.InChatRoomActionTypeIds,
		arg.OrderMethod,
	)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []GetChatRoomActionsOnChatRoomRow{}
	for rows.Next() {
		var i GetChatRoomActionsOnChatRoomRow
		if err := rows.Scan(
			&i.TChatRoomActionsPkey,
			&i.ChatRoomActionID,
			&i.ChatRoomID,
			&i.ChatRoomActionTypeID,
			&i.ActedAt,
			&i.ChatRoomCreateActionID,
			&i.CreateName,
			&i.CreateMemberID,
			&i.CreateMemberName,
			&i.CreateMemberFirstName,
			&i.CreateMemberLastName,
			&i.CreateMemberEmail,
			&i.CreateMemberProfileImageID,
			&i.ChatRoomUpdateNameActionID,
			&i.UpdateName,
			&i.UpdateMemberID,
			&i.UpdateMemberName,
			&i.UpdateMemberFirstName,
			&i.UpdateMemberLastName,
			&i.UpdateMemberEmail,
			&i.UpdateMemberProfileImageID,
			&i.ChatRoomWithdrawActionID,
			&i.WithdrawMemberID,
			&i.WithdrawMemberName,
			&i.WithdrawMemberFirstName,
			&i.WithdrawMemberLastName,
			&i.WithdrawMemberEmail,
			&i.WithdrawMemberProfileImageID,
			&i.ChatRoomAddMemberActionID,
			&i.AddMemberID,
			&i.AddMemberName,
			&i.AddMemberFirstName,
			&i.AddMemberLastName,
			&i.AddMemberEmail,
			&i.AddMemberProfileImageID,
			&i.ChatRoomRemoveMemberActionID,
			&i.RemoveMemberID,
			&i.RemoveMemberName,
			&i.RemoveMemberFirstName,
			&i.RemoveMemberLastName,
			&i.RemoveMemberEmail,
			&i.RemoveMemberProfileImageID,
			&i.MessageID,
			&i.MessageSenderID,
			&i.MessageBody,
			&i.MessagePostedAt,
			&i.MessageLastEditedAt,
			&i.MessageSenderName,
			&i.MessageSenderFirstName,
			&i.MessageSenderLastName,
			&i.MessageSenderEmail,
			&i.MessageSenderProfileImageID,
			&i.MessageSenderProfileImageHeight,
			&i.MessageSenderProfileImageWidth,
			&i.MessageSenderProfileImageAttachableItemID,
			&i.MessageSenderProfileImageOwnerID,
			&i.MessageSenderProfileImageFromOuter,
			&i.MessageSenderProfileImageAlias,
			&i.MessageSenderProfileImageUrl,
			&i.MessageSenderProfileImageSize,
			&i.MessageSenderProfileImageMimeTypeID,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const getChatRoomActionsOnChatRoomUseKeysetPaginate = `-- name: GetChatRoomActionsOnChatRoomUseKeysetPaginate :many
SELECT t_chat_room_actions.t_chat_room_actions_pkey, t_chat_room_actions.chat_room_action_id, t_chat_room_actions.chat_room_id, t_chat_room_actions.chat_room_action_type_id, t_chat_room_actions.acted_at,
t_chat_room_create_actions.chat_room_create_action_id, t_chat_room_create_actions.name create_name, cm.member_id create_member_id, cm.name create_member_name, cm.first_name create_member_first_name, cm.last_name create_member_last_name, cm.email create_member_email, cm.profile_image_id create_member_profile_image_id,
t_chat_room_update_name_actions.chat_room_update_name_action_id, t_chat_room_update_name_actions.name update_name, um.member_id update_member_id, um.name update_member_name, um.first_name update_member_first_name, um.last_name update_member_last_name, um.email update_member_email, um.profile_image_id update_member_profile_image_id,
t_chat_room_withdraw_actions.chat_room_withdraw_action_id, wm.member_id withdraw_member_id, wm.name withdraw_member_name, wm.first_name withdraw_member_first_name, wm.last_name withdraw_member_last_name, wm.email withdraw_member_email, wm.profile_image_id withdraw_member_profile_image_id,
t_chat_room_add_member_actions.chat_room_add_member_action_id, am.member_id add_member_id, am.name add_member_name, am.first_name add_member_first_name, am.last_name add_member_last_name, am.email add_member_email, am.profile_image_id add_member_profile_image_id,
t_chat_room_remove_member_actions.chat_room_remove_member_action_id, rm.member_id remove_member_id, rm.name remove_member_name, rm.first_name remove_member_first_name, rm.last_name remove_member_last_name, rm.email remove_member_email, rm.profile_image_id remove_member_profile_image_id,
t_messages.message_id, t_messages.sender_id message_sender_id, t_messages.body message_body, t_messages.posted_at message_posted_at, t_messages.last_edited_at message_last_edited_at,
mm.name message_sender_name, mm.first_name message_sender_first_name, mm.last_name message_sender_last_name, mm.email message_sender_email, mm.profile_image_id message_sender_profile_image_id,
t_images.height message_sender_profile_image_height, t_images.width message_sender_profile_image_width, t_images.attachable_item_id message_sender_profile_image_attachable_item_id,
t_attachable_items.owner_id message_sender_profile_image_owner_id, t_attachable_items.from_outer message_sender_profile_image_from_outer, t_attachable_items.alias message_sender_profile_image_alias,
t_attachable_items.url message_sender_profile_image_url, t_attachable_items.size message_sender_profile_image_size, t_attachable_items.mime_type_id message_sender_profile_image_mime_type_id
FROM t_chat_room_actions
LEFT JOIN t_chat_room_create_actions ON t_chat_room_actions.chat_room_action_id = t_chat_room_create_actions.chat_room_action_id
LEFT JOIN m_members cm ON t_chat_room_create_actions.created_by = m_members.member_id
LEFT JOIN t_chat_room_update_name_actions ON t_chat_room_actions.chat_room_action_id = t_chat_room_update_name_actions.chat_room_action_id
LEFT JOIN m_members um ON t_chat_room_update_name_actions.updated_by = um.member_id
LEFT JOIN t_chat_room_withdraw_actions ON t_chat_room_actions.chat_room_action_id = t_chat_room_withdraw_actions.chat_room_action_id
LEFT JOIN m_members wm ON t_chat_room_withdraw_actions.member_id = wm.member_id
LEFT JOIN t_chat_room_add_member_actions ON t_chat_room_actions.chat_room_action_id = t_chat_room_add_member_actions.chat_room_action_id
LEFT JOIN m_members am ON t_chat_room_add_member_actions.added_by = am.member_id
LEFT JOIN t_chat_room_remove_member_actions ON t_chat_room_actions.chat_room_action_id = t_chat_room_remove_member_actions.chat_room_action_id
LEFT JOIN m_members rm ON t_chat_room_remove_member_actions.removed_by = rm.member_id
LEFT JOIN t_messages ON t_chat_room_actions.chat_room_action_id = t_messages.chat_room_action_id
LEFT JOIN m_members mm ON t_messages.member_id = mm.member_id
LEFT JOIN t_images ON mm.chat_room_action_id = t_images.chat_room_action_id
LEFT JOIN t_attachable_items ON t_images.attachable_item_id = t_attachable_items.attachable_item_id
WHERE t_chat_room_actions.chat_room_id = $1
AND
	CASE WHEN $3::boolean = true THEN chat_room_action_type_id = ANY($4::uuid[]) ELSE TRUE END
AND
	CASE $5::text
		WHEN 'next' THEN
			CASE $6::text
				WHEN 'acted_at' THEN acted_at > $7 OR (acted_at = $7 AND t_chat_room_actions_pkey > $8::int)
				WHEN 'r_acted_at' THEN acted_at < $7 OR (acted_at = $7 AND t_chat_room_actions_pkey > $8::int)
				ELSE t_chat_room_actions_pkey > $8::int
			END
		WHEN 'prev' THEN
			CASE $6::text
				WHEN 'acted_at' THEN acted_at < $7 OR (acted_at = $7 AND t_chat_room_actions_pkey < $8::int)
				WHEN 'r_acted_at' THEN acted_at > $7 OR (acted_at = $7 AND t_chat_room_actions_pkey < $8::int)
				ELSE t_chat_room_actions_pkey < $8::int
			END
	END
ORDER BY
	CASE WHEN $6::text = 'acted_at' AND $5::text = 'next' THEN acted_at END ASC,
	CASE WHEN $6::text = 'acted_at' AND $5::text = 'prev' THEN acted_at END DESC,
	CASE WHEN $6::text = 'r_acted_at' AND $5::text = 'next' THEN acted_at END DESC,
	CASE WHEN $6::text = 'r_acted_at' AND $5::text = 'prev' THEN acted_at END ASC,
	t_chat_room_actions_pkey ASC
LIMIT $2
`

type GetChatRoomActionsOnChatRoomUseKeysetPaginateParams struct {
	ChatRoomID                   uuid.UUID   `json:"chat_room_id"`
	Limit                        int32       `json:"limit"`
	WhereInChatRoomActionTypeIds bool        `json:"where_in_chat_room_action_type_ids"`
	InChatRoomActionTypeIds      []uuid.UUID `json:"in_chat_room_action_type_ids"`
	CursorDirection              string      `json:"cursor_direction"`
	OrderMethod                  string      `json:"order_method"`
	ActedAtCursor                time.Time   `json:"acted_at_cursor"`
	Cursor                       int32       `json:"cursor"`
}

type GetChatRoomActionsOnChatRoomUseKeysetPaginateRow struct {
	TChatRoomActionsPkey                      pgtype.Int8        `json:"t_chat_room_actions_pkey"`
	ChatRoomActionID                          uuid.UUID          `json:"chat_room_action_id"`
	ChatRoomID                                uuid.UUID          `json:"chat_room_id"`
	ChatRoomActionTypeID                      uuid.UUID          `json:"chat_room_action_type_id"`
	ActedAt                                   time.Time          `json:"acted_at"`
	ChatRoomCreateActionID                    pgtype.UUID        `json:"chat_room_create_action_id"`
	CreateName                                pgtype.Text        `json:"create_name"`
	CreateMemberID                            pgtype.UUID        `json:"create_member_id"`
	CreateMemberName                          pgtype.Text        `json:"create_member_name"`
	CreateMemberFirstName                     pgtype.Text        `json:"create_member_first_name"`
	CreateMemberLastName                      pgtype.Text        `json:"create_member_last_name"`
	CreateMemberEmail                         pgtype.Text        `json:"create_member_email"`
	CreateMemberProfileImageID                pgtype.UUID        `json:"create_member_profile_image_id"`
	ChatRoomUpdateNameActionID                pgtype.UUID        `json:"chat_room_update_name_action_id"`
	UpdateName                                pgtype.Text        `json:"update_name"`
	UpdateMemberID                            pgtype.UUID        `json:"update_member_id"`
	UpdateMemberName                          pgtype.Text        `json:"update_member_name"`
	UpdateMemberFirstName                     pgtype.Text        `json:"update_member_first_name"`
	UpdateMemberLastName                      pgtype.Text        `json:"update_member_last_name"`
	UpdateMemberEmail                         pgtype.Text        `json:"update_member_email"`
	UpdateMemberProfileImageID                pgtype.UUID        `json:"update_member_profile_image_id"`
	ChatRoomWithdrawActionID                  pgtype.UUID        `json:"chat_room_withdraw_action_id"`
	WithdrawMemberID                          pgtype.UUID        `json:"withdraw_member_id"`
	WithdrawMemberName                        pgtype.Text        `json:"withdraw_member_name"`
	WithdrawMemberFirstName                   pgtype.Text        `json:"withdraw_member_first_name"`
	WithdrawMemberLastName                    pgtype.Text        `json:"withdraw_member_last_name"`
	WithdrawMemberEmail                       pgtype.Text        `json:"withdraw_member_email"`
	WithdrawMemberProfileImageID              pgtype.UUID        `json:"withdraw_member_profile_image_id"`
	ChatRoomAddMemberActionID                 pgtype.UUID        `json:"chat_room_add_member_action_id"`
	AddMemberID                               pgtype.UUID        `json:"add_member_id"`
	AddMemberName                             pgtype.Text        `json:"add_member_name"`
	AddMemberFirstName                        pgtype.Text        `json:"add_member_first_name"`
	AddMemberLastName                         pgtype.Text        `json:"add_member_last_name"`
	AddMemberEmail                            pgtype.Text        `json:"add_member_email"`
	AddMemberProfileImageID                   pgtype.UUID        `json:"add_member_profile_image_id"`
	ChatRoomRemoveMemberActionID              pgtype.UUID        `json:"chat_room_remove_member_action_id"`
	RemoveMemberID                            pgtype.UUID        `json:"remove_member_id"`
	RemoveMemberName                          pgtype.Text        `json:"remove_member_name"`
	RemoveMemberFirstName                     pgtype.Text        `json:"remove_member_first_name"`
	RemoveMemberLastName                      pgtype.Text        `json:"remove_member_last_name"`
	RemoveMemberEmail                         pgtype.Text        `json:"remove_member_email"`
	RemoveMemberProfileImageID                pgtype.UUID        `json:"remove_member_profile_image_id"`
	MessageID                                 pgtype.UUID        `json:"message_id"`
	MessageSenderID                           pgtype.UUID        `json:"message_sender_id"`
	MessageBody                               pgtype.Text        `json:"message_body"`
	MessagePostedAt                           pgtype.Timestamptz `json:"message_posted_at"`
	MessageLastEditedAt                       pgtype.Timestamptz `json:"message_last_edited_at"`
	MessageSenderName                         pgtype.Text        `json:"message_sender_name"`
	MessageSenderFirstName                    pgtype.Text        `json:"message_sender_first_name"`
	MessageSenderLastName                     pgtype.Text        `json:"message_sender_last_name"`
	MessageSenderEmail                        pgtype.Text        `json:"message_sender_email"`
	MessageSenderProfileImageID               pgtype.UUID        `json:"message_sender_profile_image_id"`
	MessageSenderProfileImageHeight           pgtype.Float8      `json:"message_sender_profile_image_height"`
	MessageSenderProfileImageWidth            pgtype.Float8      `json:"message_sender_profile_image_width"`
	MessageSenderProfileImageAttachableItemID pgtype.UUID        `json:"message_sender_profile_image_attachable_item_id"`
	MessageSenderProfileImageOwnerID          pgtype.UUID        `json:"message_sender_profile_image_owner_id"`
	MessageSenderProfileImageFromOuter        pgtype.Bool        `json:"message_sender_profile_image_from_outer"`
	MessageSenderProfileImageAlias            pgtype.Text        `json:"message_sender_profile_image_alias"`
	MessageSenderProfileImageUrl              pgtype.Text        `json:"message_sender_profile_image_url"`
	MessageSenderProfileImageSize             pgtype.Float8      `json:"message_sender_profile_image_size"`
	MessageSenderProfileImageMimeTypeID       pgtype.UUID        `json:"message_sender_profile_image_mime_type_id"`
}

func (q *Queries) GetChatRoomActionsOnChatRoomUseKeysetPaginate(ctx context.Context, arg GetChatRoomActionsOnChatRoomUseKeysetPaginateParams) ([]GetChatRoomActionsOnChatRoomUseKeysetPaginateRow, error) {
	rows, err := q.db.Query(ctx, getChatRoomActionsOnChatRoomUseKeysetPaginate,
		arg.ChatRoomID,
		arg.Limit,
		arg.WhereInChatRoomActionTypeIds,
		arg.InChatRoomActionTypeIds,
		arg.CursorDirection,
		arg.OrderMethod,
		arg.ActedAtCursor,
		arg.Cursor,
	)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []GetChatRoomActionsOnChatRoomUseKeysetPaginateRow{}
	for rows.Next() {
		var i GetChatRoomActionsOnChatRoomUseKeysetPaginateRow
		if err := rows.Scan(
			&i.TChatRoomActionsPkey,
			&i.ChatRoomActionID,
			&i.ChatRoomID,
			&i.ChatRoomActionTypeID,
			&i.ActedAt,
			&i.ChatRoomCreateActionID,
			&i.CreateName,
			&i.CreateMemberID,
			&i.CreateMemberName,
			&i.CreateMemberFirstName,
			&i.CreateMemberLastName,
			&i.CreateMemberEmail,
			&i.CreateMemberProfileImageID,
			&i.ChatRoomUpdateNameActionID,
			&i.UpdateName,
			&i.UpdateMemberID,
			&i.UpdateMemberName,
			&i.UpdateMemberFirstName,
			&i.UpdateMemberLastName,
			&i.UpdateMemberEmail,
			&i.UpdateMemberProfileImageID,
			&i.ChatRoomWithdrawActionID,
			&i.WithdrawMemberID,
			&i.WithdrawMemberName,
			&i.WithdrawMemberFirstName,
			&i.WithdrawMemberLastName,
			&i.WithdrawMemberEmail,
			&i.WithdrawMemberProfileImageID,
			&i.ChatRoomAddMemberActionID,
			&i.AddMemberID,
			&i.AddMemberName,
			&i.AddMemberFirstName,
			&i.AddMemberLastName,
			&i.AddMemberEmail,
			&i.AddMemberProfileImageID,
			&i.ChatRoomRemoveMemberActionID,
			&i.RemoveMemberID,
			&i.RemoveMemberName,
			&i.RemoveMemberFirstName,
			&i.RemoveMemberLastName,
			&i.RemoveMemberEmail,
			&i.RemoveMemberProfileImageID,
			&i.MessageID,
			&i.MessageSenderID,
			&i.MessageBody,
			&i.MessagePostedAt,
			&i.MessageLastEditedAt,
			&i.MessageSenderName,
			&i.MessageSenderFirstName,
			&i.MessageSenderLastName,
			&i.MessageSenderEmail,
			&i.MessageSenderProfileImageID,
			&i.MessageSenderProfileImageHeight,
			&i.MessageSenderProfileImageWidth,
			&i.MessageSenderProfileImageAttachableItemID,
			&i.MessageSenderProfileImageOwnerID,
			&i.MessageSenderProfileImageFromOuter,
			&i.MessageSenderProfileImageAlias,
			&i.MessageSenderProfileImageUrl,
			&i.MessageSenderProfileImageSize,
			&i.MessageSenderProfileImageMimeTypeID,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const getChatRoomActionsOnChatRoomUseNumberedPaginate = `-- name: GetChatRoomActionsOnChatRoomUseNumberedPaginate :many
SELECT t_chat_room_actions.t_chat_room_actions_pkey, t_chat_room_actions.chat_room_action_id, t_chat_room_actions.chat_room_id, t_chat_room_actions.chat_room_action_type_id, t_chat_room_actions.acted_at,
t_chat_room_create_actions.chat_room_create_action_id, t_chat_room_create_actions.name create_name, cm.member_id create_member_id, cm.name create_member_name, cm.first_name create_member_first_name, cm.last_name create_member_last_name, cm.email create_member_email, cm.profile_image_id create_member_profile_image_id,
t_chat_room_update_name_actions.chat_room_update_name_action_id, t_chat_room_update_name_actions.name update_name, um.member_id update_member_id, um.name update_member_name, um.first_name update_member_first_name, um.last_name update_member_last_name, um.email update_member_email, um.profile_image_id update_member_profile_image_id,
t_chat_room_withdraw_actions.chat_room_withdraw_action_id, wm.member_id withdraw_member_id, wm.name withdraw_member_name, wm.first_name withdraw_member_first_name, wm.last_name withdraw_member_last_name, wm.email withdraw_member_email, wm.profile_image_id withdraw_member_profile_image_id,
t_chat_room_add_member_actions.chat_room_add_member_action_id, am.member_id add_member_id, am.name add_member_name, am.first_name add_member_first_name, am.last_name add_member_last_name, am.email add_member_email, am.profile_image_id add_member_profile_image_id,
t_chat_room_remove_member_actions.chat_room_remove_member_action_id, rm.member_id remove_member_id, rm.name remove_member_name, rm.first_name remove_member_first_name, rm.last_name remove_member_last_name, rm.email remove_member_email, rm.profile_image_id remove_member_profile_image_id,
t_messages.message_id, t_messages.sender_id message_sender_id, t_messages.body message_body, t_messages.posted_at message_posted_at, t_messages.last_edited_at message_last_edited_at,
mm.name message_sender_name, mm.first_name message_sender_first_name, mm.last_name message_sender_last_name, mm.email message_sender_email, mm.profile_image_id message_sender_profile_image_id,
t_images.height message_sender_profile_image_height, t_images.width message_sender_profile_image_width, t_images.attachable_item_id message_sender_profile_image_attachable_item_id,
t_attachable_items.owner_id message_sender_profile_image_owner_id, t_attachable_items.from_outer message_sender_profile_image_from_outer, t_attachable_items.alias message_sender_profile_image_alias,
t_attachable_items.url message_sender_profile_image_url, t_attachable_items.size message_sender_profile_image_size, t_attachable_items.mime_type_id message_sender_profile_image_mime_type_id
FROM t_chat_room_actions
LEFT JOIN t_chat_room_create_actions ON t_chat_room_actions.chat_room_action_id = t_chat_room_create_actions.chat_room_action_id
LEFT JOIN m_members cm ON t_chat_room_create_actions.created_by = m_members.member_id
LEFT JOIN t_chat_room_update_name_actions ON t_chat_room_actions.chat_room_action_id = t_chat_room_update_name_actions.chat_room_action_id
LEFT JOIN m_members um ON t_chat_room_update_name_actions.updated_by = um.member_id
LEFT JOIN t_chat_room_withdraw_actions ON t_chat_room_actions.chat_room_action_id = t_chat_room_withdraw_actions.chat_room_action_id
LEFT JOIN m_members wm ON t_chat_room_withdraw_actions.member_id = wm.member_id
LEFT JOIN t_chat_room_add_member_actions ON t_chat_room_actions.chat_room_action_id = t_chat_room_add_member_actions.chat_room_action_id
LEFT JOIN m_members am ON t_chat_room_add_member_actions.added_by = am.member_id
LEFT JOIN t_chat_room_remove_member_actions ON t_chat_room_actions.chat_room_action_id = t_chat_room_remove_member_actions.chat_room_action_id
LEFT JOIN m_members rm ON t_chat_room_remove_member_actions.removed_by = rm.member_id
LEFT JOIN t_messages ON t_chat_room_actions.chat_room_action_id = t_messages.chat_room_action_id
LEFT JOIN m_members mm ON t_messages.member_id = mm.member_id
LEFT JOIN t_images ON mm.chat_room_action_id = t_images.chat_room_action_id
LEFT JOIN t_attachable_items ON t_images.attachable_item_id = t_attachable_items.attachable_item_id
WHERE t_chat_room_actions.chat_room_id = $1
AND
	CASE WHEN $4::boolean = true THEN chat_room_action_type_id = ANY($5::uuid[]) ELSE TRUE END
ORDER BY
	CASE WHEN $6::text = 'acted_at' THEN acted_at END ASC,
	CASE WHEN $6::text = 'r_acted_at' THEN acted_at END DESC,
	t_chat_room_actions_pkey ASC
LIMIT $2 OFFSET $3
`

type GetChatRoomActionsOnChatRoomUseNumberedPaginateParams struct {
	ChatRoomID                   uuid.UUID   `json:"chat_room_id"`
	Limit                        int32       `json:"limit"`
	Offset                       int32       `json:"offset"`
	WhereInChatRoomActionTypeIds bool        `json:"where_in_chat_room_action_type_ids"`
	InChatRoomActionTypeIds      []uuid.UUID `json:"in_chat_room_action_type_ids"`
	OrderMethod                  string      `json:"order_method"`
}

type GetChatRoomActionsOnChatRoomUseNumberedPaginateRow struct {
	TChatRoomActionsPkey                      pgtype.Int8        `json:"t_chat_room_actions_pkey"`
	ChatRoomActionID                          uuid.UUID          `json:"chat_room_action_id"`
	ChatRoomID                                uuid.UUID          `json:"chat_room_id"`
	ChatRoomActionTypeID                      uuid.UUID          `json:"chat_room_action_type_id"`
	ActedAt                                   time.Time          `json:"acted_at"`
	ChatRoomCreateActionID                    pgtype.UUID        `json:"chat_room_create_action_id"`
	CreateName                                pgtype.Text        `json:"create_name"`
	CreateMemberID                            pgtype.UUID        `json:"create_member_id"`
	CreateMemberName                          pgtype.Text        `json:"create_member_name"`
	CreateMemberFirstName                     pgtype.Text        `json:"create_member_first_name"`
	CreateMemberLastName                      pgtype.Text        `json:"create_member_last_name"`
	CreateMemberEmail                         pgtype.Text        `json:"create_member_email"`
	CreateMemberProfileImageID                pgtype.UUID        `json:"create_member_profile_image_id"`
	ChatRoomUpdateNameActionID                pgtype.UUID        `json:"chat_room_update_name_action_id"`
	UpdateName                                pgtype.Text        `json:"update_name"`
	UpdateMemberID                            pgtype.UUID        `json:"update_member_id"`
	UpdateMemberName                          pgtype.Text        `json:"update_member_name"`
	UpdateMemberFirstName                     pgtype.Text        `json:"update_member_first_name"`
	UpdateMemberLastName                      pgtype.Text        `json:"update_member_last_name"`
	UpdateMemberEmail                         pgtype.Text        `json:"update_member_email"`
	UpdateMemberProfileImageID                pgtype.UUID        `json:"update_member_profile_image_id"`
	ChatRoomWithdrawActionID                  pgtype.UUID        `json:"chat_room_withdraw_action_id"`
	WithdrawMemberID                          pgtype.UUID        `json:"withdraw_member_id"`
	WithdrawMemberName                        pgtype.Text        `json:"withdraw_member_name"`
	WithdrawMemberFirstName                   pgtype.Text        `json:"withdraw_member_first_name"`
	WithdrawMemberLastName                    pgtype.Text        `json:"withdraw_member_last_name"`
	WithdrawMemberEmail                       pgtype.Text        `json:"withdraw_member_email"`
	WithdrawMemberProfileImageID              pgtype.UUID        `json:"withdraw_member_profile_image_id"`
	ChatRoomAddMemberActionID                 pgtype.UUID        `json:"chat_room_add_member_action_id"`
	AddMemberID                               pgtype.UUID        `json:"add_member_id"`
	AddMemberName                             pgtype.Text        `json:"add_member_name"`
	AddMemberFirstName                        pgtype.Text        `json:"add_member_first_name"`
	AddMemberLastName                         pgtype.Text        `json:"add_member_last_name"`
	AddMemberEmail                            pgtype.Text        `json:"add_member_email"`
	AddMemberProfileImageID                   pgtype.UUID        `json:"add_member_profile_image_id"`
	ChatRoomRemoveMemberActionID              pgtype.UUID        `json:"chat_room_remove_member_action_id"`
	RemoveMemberID                            pgtype.UUID        `json:"remove_member_id"`
	RemoveMemberName                          pgtype.Text        `json:"remove_member_name"`
	RemoveMemberFirstName                     pgtype.Text        `json:"remove_member_first_name"`
	RemoveMemberLastName                      pgtype.Text        `json:"remove_member_last_name"`
	RemoveMemberEmail                         pgtype.Text        `json:"remove_member_email"`
	RemoveMemberProfileImageID                pgtype.UUID        `json:"remove_member_profile_image_id"`
	MessageID                                 pgtype.UUID        `json:"message_id"`
	MessageSenderID                           pgtype.UUID        `json:"message_sender_id"`
	MessageBody                               pgtype.Text        `json:"message_body"`
	MessagePostedAt                           pgtype.Timestamptz `json:"message_posted_at"`
	MessageLastEditedAt                       pgtype.Timestamptz `json:"message_last_edited_at"`
	MessageSenderName                         pgtype.Text        `json:"message_sender_name"`
	MessageSenderFirstName                    pgtype.Text        `json:"message_sender_first_name"`
	MessageSenderLastName                     pgtype.Text        `json:"message_sender_last_name"`
	MessageSenderEmail                        pgtype.Text        `json:"message_sender_email"`
	MessageSenderProfileImageID               pgtype.UUID        `json:"message_sender_profile_image_id"`
	MessageSenderProfileImageHeight           pgtype.Float8      `json:"message_sender_profile_image_height"`
	MessageSenderProfileImageWidth            pgtype.Float8      `json:"message_sender_profile_image_width"`
	MessageSenderProfileImageAttachableItemID pgtype.UUID        `json:"message_sender_profile_image_attachable_item_id"`
	MessageSenderProfileImageOwnerID          pgtype.UUID        `json:"message_sender_profile_image_owner_id"`
	MessageSenderProfileImageFromOuter        pgtype.Bool        `json:"message_sender_profile_image_from_outer"`
	MessageSenderProfileImageAlias            pgtype.Text        `json:"message_sender_profile_image_alias"`
	MessageSenderProfileImageUrl              pgtype.Text        `json:"message_sender_profile_image_url"`
	MessageSenderProfileImageSize             pgtype.Float8      `json:"message_sender_profile_image_size"`
	MessageSenderProfileImageMimeTypeID       pgtype.UUID        `json:"message_sender_profile_image_mime_type_id"`
}

func (q *Queries) GetChatRoomActionsOnChatRoomUseNumberedPaginate(ctx context.Context, arg GetChatRoomActionsOnChatRoomUseNumberedPaginateParams) ([]GetChatRoomActionsOnChatRoomUseNumberedPaginateRow, error) {
	rows, err := q.db.Query(ctx, getChatRoomActionsOnChatRoomUseNumberedPaginate,
		arg.ChatRoomID,
		arg.Limit,
		arg.Offset,
		arg.WhereInChatRoomActionTypeIds,
		arg.InChatRoomActionTypeIds,
		arg.OrderMethod,
	)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []GetChatRoomActionsOnChatRoomUseNumberedPaginateRow{}
	for rows.Next() {
		var i GetChatRoomActionsOnChatRoomUseNumberedPaginateRow
		if err := rows.Scan(
			&i.TChatRoomActionsPkey,
			&i.ChatRoomActionID,
			&i.ChatRoomID,
			&i.ChatRoomActionTypeID,
			&i.ActedAt,
			&i.ChatRoomCreateActionID,
			&i.CreateName,
			&i.CreateMemberID,
			&i.CreateMemberName,
			&i.CreateMemberFirstName,
			&i.CreateMemberLastName,
			&i.CreateMemberEmail,
			&i.CreateMemberProfileImageID,
			&i.ChatRoomUpdateNameActionID,
			&i.UpdateName,
			&i.UpdateMemberID,
			&i.UpdateMemberName,
			&i.UpdateMemberFirstName,
			&i.UpdateMemberLastName,
			&i.UpdateMemberEmail,
			&i.UpdateMemberProfileImageID,
			&i.ChatRoomWithdrawActionID,
			&i.WithdrawMemberID,
			&i.WithdrawMemberName,
			&i.WithdrawMemberFirstName,
			&i.WithdrawMemberLastName,
			&i.WithdrawMemberEmail,
			&i.WithdrawMemberProfileImageID,
			&i.ChatRoomAddMemberActionID,
			&i.AddMemberID,
			&i.AddMemberName,
			&i.AddMemberFirstName,
			&i.AddMemberLastName,
			&i.AddMemberEmail,
			&i.AddMemberProfileImageID,
			&i.ChatRoomRemoveMemberActionID,
			&i.RemoveMemberID,
			&i.RemoveMemberName,
			&i.RemoveMemberFirstName,
			&i.RemoveMemberLastName,
			&i.RemoveMemberEmail,
			&i.RemoveMemberProfileImageID,
			&i.MessageID,
			&i.MessageSenderID,
			&i.MessageBody,
			&i.MessagePostedAt,
			&i.MessageLastEditedAt,
			&i.MessageSenderName,
			&i.MessageSenderFirstName,
			&i.MessageSenderLastName,
			&i.MessageSenderEmail,
			&i.MessageSenderProfileImageID,
			&i.MessageSenderProfileImageHeight,
			&i.MessageSenderProfileImageWidth,
			&i.MessageSenderProfileImageAttachableItemID,
			&i.MessageSenderProfileImageOwnerID,
			&i.MessageSenderProfileImageFromOuter,
			&i.MessageSenderProfileImageAlias,
			&i.MessageSenderProfileImageUrl,
			&i.MessageSenderProfileImageSize,
			&i.MessageSenderProfileImageMimeTypeID,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const getPluralChatRoomActions = `-- name: GetPluralChatRoomActions :many
SELECT t_chat_room_actions.t_chat_room_actions_pkey, t_chat_room_actions.chat_room_action_id, t_chat_room_actions.chat_room_id, t_chat_room_actions.chat_room_action_type_id, t_chat_room_actions.acted_at,
t_chat_room_create_actions.chat_room_create_action_id, t_chat_room_create_actions.name create_name, cm.member_id create_member_id, cm.name create_member_name, cm.first_name create_member_first_name, cm.last_name create_member_last_name, cm.email create_member_email, cm.profile_image_id create_member_profile_image_id,
t_chat_room_update_name_actions.chat_room_update_name_action_id, t_chat_room_update_name_actions.name update_name, um.member_id update_member_id, um.name update_member_name, um.first_name update_member_first_name, um.last_name update_member_last_name, um.email update_member_email, um.profile_image_id update_member_profile_image_id,
t_chat_room_withdraw_actions.chat_room_withdraw_action_id, wm.member_id withdraw_member_id, wm.name withdraw_member_name, wm.first_name withdraw_member_first_name, wm.last_name withdraw_member_last_name, wm.email withdraw_member_email, wm.profile_image_id withdraw_member_profile_image_id,
t_chat_room_add_member_actions.chat_room_add_member_action_id, am.member_id add_member_id, am.name add_member_name, am.first_name add_member_first_name, am.last_name add_member_last_name, am.email add_member_email, am.profile_image_id add_member_profile_image_id,
t_chat_room_remove_member_actions.chat_room_remove_member_action_id, rm.member_id remove_member_id, rm.name remove_member_name, rm.first_name remove_member_first_name, rm.last_name remove_member_last_name, rm.email remove_member_email, rm.profile_image_id remove_member_profile_image_id,
t_messages.message_id, t_messages.sender_id message_sender_id, t_messages.body message_body, t_messages.posted_at message_posted_at, t_messages.last_edited_at message_last_edited_at,
mm.name message_sender_name, mm.first_name message_sender_first_name, mm.last_name message_sender_last_name, mm.email message_sender_email, mm.profile_image_id message_sender_profile_image_id,
t_images.height message_sender_profile_image_height, t_images.width message_sender_profile_image_width, t_images.attachable_item_id message_sender_profile_image_attachable_item_id,
t_attachable_items.owner_id message_sender_profile_image_owner_id, t_attachable_items.from_outer message_sender_profile_image_from_outer, t_attachable_items.alias message_sender_profile_image_alias,
t_attachable_items.url message_sender_profile_image_url, t_attachable_items.size message_sender_profile_image_size, t_attachable_items.mime_type_id message_sender_profile_image_mime_type_id
FROM t_chat_room_actions
LEFT JOIN t_chat_room_create_actions ON t_chat_room_actions.chat_room_action_id = t_chat_room_create_actions.chat_room_action_id
LEFT JOIN m_members cm ON t_chat_room_create_actions.created_by = m_members.member_id
LEFT JOIN t_chat_room_update_name_actions ON t_chat_room_actions.chat_room_action_id = t_chat_room_update_name_actions.chat_room_action_id
LEFT JOIN m_members um ON t_chat_room_update_name_actions.updated_by = um.member_id
LEFT JOIN t_chat_room_withdraw_actions ON t_chat_room_actions.chat_room_action_id = t_chat_room_withdraw_actions.chat_room_action_id
LEFT JOIN m_members wm ON t_chat_room_withdraw_actions.member_id = wm.member_id
LEFT JOIN t_chat_room_add_member_actions ON t_chat_room_actions.chat_room_action_id = t_chat_room_add_member_actions.chat_room_action_id
LEFT JOIN m_members am ON t_chat_room_add_member_actions.added_by = am.member_id
LEFT JOIN t_chat_room_remove_member_actions ON t_chat_room_actions.chat_room_action_id = t_chat_room_remove_member_actions.chat_room_action_id
LEFT JOIN m_members rm ON t_chat_room_remove_member_actions.removed_by = rm.member_id
LEFT JOIN t_messages ON t_chat_room_actions.chat_room_action_id = t_messages.chat_room_action_id
LEFT JOIN m_members mm ON t_messages.member_id = mm.member_id
LEFT JOIN t_images ON mm.chat_room_action_id = t_images.chat_room_action_id
LEFT JOIN t_attachable_items ON t_images.attachable_item_id = t_attachable_items.attachable_item_id
WHERE chat_room_action_id = ANY($1::uuid[])
ORDER BY
	CASE WHEN $2::text = 'acted_at' THEN acted_at END ASC,
	CASE WHEN $2::text = 'r_acted_at' THEN acted_at END DESC,
	t_chat_room_actions_pkey ASC
`

type GetPluralChatRoomActionsParams struct {
	ChatRoomActionIds []uuid.UUID `json:"chat_room_action_ids"`
	OrderMethod       string      `json:"order_method"`
}

type GetPluralChatRoomActionsRow struct {
	TChatRoomActionsPkey                      pgtype.Int8        `json:"t_chat_room_actions_pkey"`
	ChatRoomActionID                          uuid.UUID          `json:"chat_room_action_id"`
	ChatRoomID                                uuid.UUID          `json:"chat_room_id"`
	ChatRoomActionTypeID                      uuid.UUID          `json:"chat_room_action_type_id"`
	ActedAt                                   time.Time          `json:"acted_at"`
	ChatRoomCreateActionID                    pgtype.UUID        `json:"chat_room_create_action_id"`
	CreateName                                pgtype.Text        `json:"create_name"`
	CreateMemberID                            pgtype.UUID        `json:"create_member_id"`
	CreateMemberName                          pgtype.Text        `json:"create_member_name"`
	CreateMemberFirstName                     pgtype.Text        `json:"create_member_first_name"`
	CreateMemberLastName                      pgtype.Text        `json:"create_member_last_name"`
	CreateMemberEmail                         pgtype.Text        `json:"create_member_email"`
	CreateMemberProfileImageID                pgtype.UUID        `json:"create_member_profile_image_id"`
	ChatRoomUpdateNameActionID                pgtype.UUID        `json:"chat_room_update_name_action_id"`
	UpdateName                                pgtype.Text        `json:"update_name"`
	UpdateMemberID                            pgtype.UUID        `json:"update_member_id"`
	UpdateMemberName                          pgtype.Text        `json:"update_member_name"`
	UpdateMemberFirstName                     pgtype.Text        `json:"update_member_first_name"`
	UpdateMemberLastName                      pgtype.Text        `json:"update_member_last_name"`
	UpdateMemberEmail                         pgtype.Text        `json:"update_member_email"`
	UpdateMemberProfileImageID                pgtype.UUID        `json:"update_member_profile_image_id"`
	ChatRoomWithdrawActionID                  pgtype.UUID        `json:"chat_room_withdraw_action_id"`
	WithdrawMemberID                          pgtype.UUID        `json:"withdraw_member_id"`
	WithdrawMemberName                        pgtype.Text        `json:"withdraw_member_name"`
	WithdrawMemberFirstName                   pgtype.Text        `json:"withdraw_member_first_name"`
	WithdrawMemberLastName                    pgtype.Text        `json:"withdraw_member_last_name"`
	WithdrawMemberEmail                       pgtype.Text        `json:"withdraw_member_email"`
	WithdrawMemberProfileImageID              pgtype.UUID        `json:"withdraw_member_profile_image_id"`
	ChatRoomAddMemberActionID                 pgtype.UUID        `json:"chat_room_add_member_action_id"`
	AddMemberID                               pgtype.UUID        `json:"add_member_id"`
	AddMemberName                             pgtype.Text        `json:"add_member_name"`
	AddMemberFirstName                        pgtype.Text        `json:"add_member_first_name"`
	AddMemberLastName                         pgtype.Text        `json:"add_member_last_name"`
	AddMemberEmail                            pgtype.Text        `json:"add_member_email"`
	AddMemberProfileImageID                   pgtype.UUID        `json:"add_member_profile_image_id"`
	ChatRoomRemoveMemberActionID              pgtype.UUID        `json:"chat_room_remove_member_action_id"`
	RemoveMemberID                            pgtype.UUID        `json:"remove_member_id"`
	RemoveMemberName                          pgtype.Text        `json:"remove_member_name"`
	RemoveMemberFirstName                     pgtype.Text        `json:"remove_member_first_name"`
	RemoveMemberLastName                      pgtype.Text        `json:"remove_member_last_name"`
	RemoveMemberEmail                         pgtype.Text        `json:"remove_member_email"`
	RemoveMemberProfileImageID                pgtype.UUID        `json:"remove_member_profile_image_id"`
	MessageID                                 pgtype.UUID        `json:"message_id"`
	MessageSenderID                           pgtype.UUID        `json:"message_sender_id"`
	MessageBody                               pgtype.Text        `json:"message_body"`
	MessagePostedAt                           pgtype.Timestamptz `json:"message_posted_at"`
	MessageLastEditedAt                       pgtype.Timestamptz `json:"message_last_edited_at"`
	MessageSenderName                         pgtype.Text        `json:"message_sender_name"`
	MessageSenderFirstName                    pgtype.Text        `json:"message_sender_first_name"`
	MessageSenderLastName                     pgtype.Text        `json:"message_sender_last_name"`
	MessageSenderEmail                        pgtype.Text        `json:"message_sender_email"`
	MessageSenderProfileImageID               pgtype.UUID        `json:"message_sender_profile_image_id"`
	MessageSenderProfileImageHeight           pgtype.Float8      `json:"message_sender_profile_image_height"`
	MessageSenderProfileImageWidth            pgtype.Float8      `json:"message_sender_profile_image_width"`
	MessageSenderProfileImageAttachableItemID pgtype.UUID        `json:"message_sender_profile_image_attachable_item_id"`
	MessageSenderProfileImageOwnerID          pgtype.UUID        `json:"message_sender_profile_image_owner_id"`
	MessageSenderProfileImageFromOuter        pgtype.Bool        `json:"message_sender_profile_image_from_outer"`
	MessageSenderProfileImageAlias            pgtype.Text        `json:"message_sender_profile_image_alias"`
	MessageSenderProfileImageUrl              pgtype.Text        `json:"message_sender_profile_image_url"`
	MessageSenderProfileImageSize             pgtype.Float8      `json:"message_sender_profile_image_size"`
	MessageSenderProfileImageMimeTypeID       pgtype.UUID        `json:"message_sender_profile_image_mime_type_id"`
}

func (q *Queries) GetPluralChatRoomActions(ctx context.Context, arg GetPluralChatRoomActionsParams) ([]GetPluralChatRoomActionsRow, error) {
	rows, err := q.db.Query(ctx, getPluralChatRoomActions, arg.ChatRoomActionIds, arg.OrderMethod)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []GetPluralChatRoomActionsRow{}
	for rows.Next() {
		var i GetPluralChatRoomActionsRow
		if err := rows.Scan(
			&i.TChatRoomActionsPkey,
			&i.ChatRoomActionID,
			&i.ChatRoomID,
			&i.ChatRoomActionTypeID,
			&i.ActedAt,
			&i.ChatRoomCreateActionID,
			&i.CreateName,
			&i.CreateMemberID,
			&i.CreateMemberName,
			&i.CreateMemberFirstName,
			&i.CreateMemberLastName,
			&i.CreateMemberEmail,
			&i.CreateMemberProfileImageID,
			&i.ChatRoomUpdateNameActionID,
			&i.UpdateName,
			&i.UpdateMemberID,
			&i.UpdateMemberName,
			&i.UpdateMemberFirstName,
			&i.UpdateMemberLastName,
			&i.UpdateMemberEmail,
			&i.UpdateMemberProfileImageID,
			&i.ChatRoomWithdrawActionID,
			&i.WithdrawMemberID,
			&i.WithdrawMemberName,
			&i.WithdrawMemberFirstName,
			&i.WithdrawMemberLastName,
			&i.WithdrawMemberEmail,
			&i.WithdrawMemberProfileImageID,
			&i.ChatRoomAddMemberActionID,
			&i.AddMemberID,
			&i.AddMemberName,
			&i.AddMemberFirstName,
			&i.AddMemberLastName,
			&i.AddMemberEmail,
			&i.AddMemberProfileImageID,
			&i.ChatRoomRemoveMemberActionID,
			&i.RemoveMemberID,
			&i.RemoveMemberName,
			&i.RemoveMemberFirstName,
			&i.RemoveMemberLastName,
			&i.RemoveMemberEmail,
			&i.RemoveMemberProfileImageID,
			&i.MessageID,
			&i.MessageSenderID,
			&i.MessageBody,
			&i.MessagePostedAt,
			&i.MessageLastEditedAt,
			&i.MessageSenderName,
			&i.MessageSenderFirstName,
			&i.MessageSenderLastName,
			&i.MessageSenderEmail,
			&i.MessageSenderProfileImageID,
			&i.MessageSenderProfileImageHeight,
			&i.MessageSenderProfileImageWidth,
			&i.MessageSenderProfileImageAttachableItemID,
			&i.MessageSenderProfileImageOwnerID,
			&i.MessageSenderProfileImageFromOuter,
			&i.MessageSenderProfileImageAlias,
			&i.MessageSenderProfileImageUrl,
			&i.MessageSenderProfileImageSize,
			&i.MessageSenderProfileImageMimeTypeID,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const getPluralChatRoomActionsUseNumberedPaginate = `-- name: GetPluralChatRoomActionsUseNumberedPaginate :many
SELECT t_chat_room_actions.t_chat_room_actions_pkey, t_chat_room_actions.chat_room_action_id, t_chat_room_actions.chat_room_id, t_chat_room_actions.chat_room_action_type_id, t_chat_room_actions.acted_at,
t_chat_room_create_actions.chat_room_create_action_id, t_chat_room_create_actions.name create_name, cm.member_id create_member_id, cm.name create_member_name, cm.first_name create_member_first_name, cm.last_name create_member_last_name, cm.email create_member_email, cm.profile_image_id create_member_profile_image_id,
t_chat_room_update_name_actions.chat_room_update_name_action_id, t_chat_room_update_name_actions.name update_name, um.member_id update_member_id, um.name update_member_name, um.first_name update_member_first_name, um.last_name update_member_last_name, um.email update_member_email, um.profile_image_id update_member_profile_image_id,
t_chat_room_withdraw_actions.chat_room_withdraw_action_id, wm.member_id withdraw_member_id, wm.name withdraw_member_name, wm.first_name withdraw_member_first_name, wm.last_name withdraw_member_last_name, wm.email withdraw_member_email, wm.profile_image_id withdraw_member_profile_image_id,
t_chat_room_add_member_actions.chat_room_add_member_action_id, am.member_id add_member_id, am.name add_member_name, am.first_name add_member_first_name, am.last_name add_member_last_name, am.email add_member_email, am.profile_image_id add_member_profile_image_id,
t_chat_room_remove_member_actions.chat_room_remove_member_action_id, rm.member_id remove_member_id, rm.name remove_member_name, rm.first_name remove_member_first_name, rm.last_name remove_member_last_name, rm.email remove_member_email, rm.profile_image_id remove_member_profile_image_id,
t_messages.message_id, t_messages.sender_id message_sender_id, t_messages.body message_body, t_messages.posted_at message_posted_at, t_messages.last_edited_at message_last_edited_at,
mm.name message_sender_name, mm.first_name message_sender_first_name, mm.last_name message_sender_last_name, mm.email message_sender_email, mm.profile_image_id message_sender_profile_image_id,
t_images.height message_sender_profile_image_height, t_images.width message_sender_profile_image_width, t_images.attachable_item_id message_sender_profile_image_attachable_item_id,
t_attachable_items.owner_id message_sender_profile_image_owner_id, t_attachable_items.from_outer message_sender_profile_image_from_outer, t_attachable_items.alias message_sender_profile_image_alias,
t_attachable_items.url message_sender_profile_image_url, t_attachable_items.size message_sender_profile_image_size, t_attachable_items.mime_type_id message_sender_profile_image_mime_type_id
FROM t_chat_room_actions
LEFT JOIN t_chat_room_create_actions ON t_chat_room_actions.chat_room_action_id = t_chat_room_create_actions.chat_room_action_id
LEFT JOIN m_members cm ON t_chat_room_create_actions.created_by = m_members.member_id
LEFT JOIN t_chat_room_update_name_actions ON t_chat_room_actions.chat_room_action_id = t_chat_room_update_name_actions.chat_room_action_id
LEFT JOIN m_members um ON t_chat_room_update_name_actions.updated_by = um.member_id
LEFT JOIN t_chat_room_withdraw_actions ON t_chat_room_actions.chat_room_action_id = t_chat_room_withdraw_actions.chat_room_action_id
LEFT JOIN m_members wm ON t_chat_room_withdraw_actions.member_id = wm.member_id
LEFT JOIN t_chat_room_add_member_actions ON t_chat_room_actions.chat_room_action_id = t_chat_room_add_member_actions.chat_room_action_id
LEFT JOIN m_members am ON t_chat_room_add_member_actions.added_by = am.member_id
LEFT JOIN t_chat_room_remove_member_actions ON t_chat_room_actions.chat_room_action_id = t_chat_room_remove_member_actions.chat_room_action_id
LEFT JOIN m_members rm ON t_chat_room_remove_member_actions.removed_by = rm.member_id
LEFT JOIN t_messages ON t_chat_room_actions.chat_room_action_id = t_messages.chat_room_action_id
LEFT JOIN m_members mm ON t_messages.member_id = mm.member_id
LEFT JOIN t_images ON mm.chat_room_action_id = t_images.chat_room_action_id
LEFT JOIN t_attachable_items ON t_images.attachable_item_id = t_attachable_items.attachable_item_id
WHERE chat_room_action_id = ANY($3::uuid[])
ORDER BY
	CASE WHEN $4::text = 'acted_at' THEN acted_at END ASC,
	CASE WHEN $4::text = 'r_acted_at' THEN acted_at END DESC,
	t_chat_room_actions_pkey ASC
LIMIT $1 OFFSET $2
`

type GetPluralChatRoomActionsUseNumberedPaginateParams struct {
	Limit             int32       `json:"limit"`
	Offset            int32       `json:"offset"`
	ChatRoomActionIds []uuid.UUID `json:"chat_room_action_ids"`
	OrderMethod       string      `json:"order_method"`
}

type GetPluralChatRoomActionsUseNumberedPaginateRow struct {
	TChatRoomActionsPkey                      pgtype.Int8        `json:"t_chat_room_actions_pkey"`
	ChatRoomActionID                          uuid.UUID          `json:"chat_room_action_id"`
	ChatRoomID                                uuid.UUID          `json:"chat_room_id"`
	ChatRoomActionTypeID                      uuid.UUID          `json:"chat_room_action_type_id"`
	ActedAt                                   time.Time          `json:"acted_at"`
	ChatRoomCreateActionID                    pgtype.UUID        `json:"chat_room_create_action_id"`
	CreateName                                pgtype.Text        `json:"create_name"`
	CreateMemberID                            pgtype.UUID        `json:"create_member_id"`
	CreateMemberName                          pgtype.Text        `json:"create_member_name"`
	CreateMemberFirstName                     pgtype.Text        `json:"create_member_first_name"`
	CreateMemberLastName                      pgtype.Text        `json:"create_member_last_name"`
	CreateMemberEmail                         pgtype.Text        `json:"create_member_email"`
	CreateMemberProfileImageID                pgtype.UUID        `json:"create_member_profile_image_id"`
	ChatRoomUpdateNameActionID                pgtype.UUID        `json:"chat_room_update_name_action_id"`
	UpdateName                                pgtype.Text        `json:"update_name"`
	UpdateMemberID                            pgtype.UUID        `json:"update_member_id"`
	UpdateMemberName                          pgtype.Text        `json:"update_member_name"`
	UpdateMemberFirstName                     pgtype.Text        `json:"update_member_first_name"`
	UpdateMemberLastName                      pgtype.Text        `json:"update_member_last_name"`
	UpdateMemberEmail                         pgtype.Text        `json:"update_member_email"`
	UpdateMemberProfileImageID                pgtype.UUID        `json:"update_member_profile_image_id"`
	ChatRoomWithdrawActionID                  pgtype.UUID        `json:"chat_room_withdraw_action_id"`
	WithdrawMemberID                          pgtype.UUID        `json:"withdraw_member_id"`
	WithdrawMemberName                        pgtype.Text        `json:"withdraw_member_name"`
	WithdrawMemberFirstName                   pgtype.Text        `json:"withdraw_member_first_name"`
	WithdrawMemberLastName                    pgtype.Text        `json:"withdraw_member_last_name"`
	WithdrawMemberEmail                       pgtype.Text        `json:"withdraw_member_email"`
	WithdrawMemberProfileImageID              pgtype.UUID        `json:"withdraw_member_profile_image_id"`
	ChatRoomAddMemberActionID                 pgtype.UUID        `json:"chat_room_add_member_action_id"`
	AddMemberID                               pgtype.UUID        `json:"add_member_id"`
	AddMemberName                             pgtype.Text        `json:"add_member_name"`
	AddMemberFirstName                        pgtype.Text        `json:"add_member_first_name"`
	AddMemberLastName                         pgtype.Text        `json:"add_member_last_name"`
	AddMemberEmail                            pgtype.Text        `json:"add_member_email"`
	AddMemberProfileImageID                   pgtype.UUID        `json:"add_member_profile_image_id"`
	ChatRoomRemoveMemberActionID              pgtype.UUID        `json:"chat_room_remove_member_action_id"`
	RemoveMemberID                            pgtype.UUID        `json:"remove_member_id"`
	RemoveMemberName                          pgtype.Text        `json:"remove_member_name"`
	RemoveMemberFirstName                     pgtype.Text        `json:"remove_member_first_name"`
	RemoveMemberLastName                      pgtype.Text        `json:"remove_member_last_name"`
	RemoveMemberEmail                         pgtype.Text        `json:"remove_member_email"`
	RemoveMemberProfileImageID                pgtype.UUID        `json:"remove_member_profile_image_id"`
	MessageID                                 pgtype.UUID        `json:"message_id"`
	MessageSenderID                           pgtype.UUID        `json:"message_sender_id"`
	MessageBody                               pgtype.Text        `json:"message_body"`
	MessagePostedAt                           pgtype.Timestamptz `json:"message_posted_at"`
	MessageLastEditedAt                       pgtype.Timestamptz `json:"message_last_edited_at"`
	MessageSenderName                         pgtype.Text        `json:"message_sender_name"`
	MessageSenderFirstName                    pgtype.Text        `json:"message_sender_first_name"`
	MessageSenderLastName                     pgtype.Text        `json:"message_sender_last_name"`
	MessageSenderEmail                        pgtype.Text        `json:"message_sender_email"`
	MessageSenderProfileImageID               pgtype.UUID        `json:"message_sender_profile_image_id"`
	MessageSenderProfileImageHeight           pgtype.Float8      `json:"message_sender_profile_image_height"`
	MessageSenderProfileImageWidth            pgtype.Float8      `json:"message_sender_profile_image_width"`
	MessageSenderProfileImageAttachableItemID pgtype.UUID        `json:"message_sender_profile_image_attachable_item_id"`
	MessageSenderProfileImageOwnerID          pgtype.UUID        `json:"message_sender_profile_image_owner_id"`
	MessageSenderProfileImageFromOuter        pgtype.Bool        `json:"message_sender_profile_image_from_outer"`
	MessageSenderProfileImageAlias            pgtype.Text        `json:"message_sender_profile_image_alias"`
	MessageSenderProfileImageUrl              pgtype.Text        `json:"message_sender_profile_image_url"`
	MessageSenderProfileImageSize             pgtype.Float8      `json:"message_sender_profile_image_size"`
	MessageSenderProfileImageMimeTypeID       pgtype.UUID        `json:"message_sender_profile_image_mime_type_id"`
}

func (q *Queries) GetPluralChatRoomActionsUseNumberedPaginate(ctx context.Context, arg GetPluralChatRoomActionsUseNumberedPaginateParams) ([]GetPluralChatRoomActionsUseNumberedPaginateRow, error) {
	rows, err := q.db.Query(ctx, getPluralChatRoomActionsUseNumberedPaginate,
		arg.Limit,
		arg.Offset,
		arg.ChatRoomActionIds,
		arg.OrderMethod,
	)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []GetPluralChatRoomActionsUseNumberedPaginateRow{}
	for rows.Next() {
		var i GetPluralChatRoomActionsUseNumberedPaginateRow
		if err := rows.Scan(
			&i.TChatRoomActionsPkey,
			&i.ChatRoomActionID,
			&i.ChatRoomID,
			&i.ChatRoomActionTypeID,
			&i.ActedAt,
			&i.ChatRoomCreateActionID,
			&i.CreateName,
			&i.CreateMemberID,
			&i.CreateMemberName,
			&i.CreateMemberFirstName,
			&i.CreateMemberLastName,
			&i.CreateMemberEmail,
			&i.CreateMemberProfileImageID,
			&i.ChatRoomUpdateNameActionID,
			&i.UpdateName,
			&i.UpdateMemberID,
			&i.UpdateMemberName,
			&i.UpdateMemberFirstName,
			&i.UpdateMemberLastName,
			&i.UpdateMemberEmail,
			&i.UpdateMemberProfileImageID,
			&i.ChatRoomWithdrawActionID,
			&i.WithdrawMemberID,
			&i.WithdrawMemberName,
			&i.WithdrawMemberFirstName,
			&i.WithdrawMemberLastName,
			&i.WithdrawMemberEmail,
			&i.WithdrawMemberProfileImageID,
			&i.ChatRoomAddMemberActionID,
			&i.AddMemberID,
			&i.AddMemberName,
			&i.AddMemberFirstName,
			&i.AddMemberLastName,
			&i.AddMemberEmail,
			&i.AddMemberProfileImageID,
			&i.ChatRoomRemoveMemberActionID,
			&i.RemoveMemberID,
			&i.RemoveMemberName,
			&i.RemoveMemberFirstName,
			&i.RemoveMemberLastName,
			&i.RemoveMemberEmail,
			&i.RemoveMemberProfileImageID,
			&i.MessageID,
			&i.MessageSenderID,
			&i.MessageBody,
			&i.MessagePostedAt,
			&i.MessageLastEditedAt,
			&i.MessageSenderName,
			&i.MessageSenderFirstName,
			&i.MessageSenderLastName,
			&i.MessageSenderEmail,
			&i.MessageSenderProfileImageID,
			&i.MessageSenderProfileImageHeight,
			&i.MessageSenderProfileImageWidth,
			&i.MessageSenderProfileImageAttachableItemID,
			&i.MessageSenderProfileImageOwnerID,
			&i.MessageSenderProfileImageFromOuter,
			&i.MessageSenderProfileImageAlias,
			&i.MessageSenderProfileImageUrl,
			&i.MessageSenderProfileImageSize,
			&i.MessageSenderProfileImageMimeTypeID,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const pluralDeleteChatRoomActions = `-- name: PluralDeleteChatRoomActions :execrows
DELETE FROM t_chat_room_actions WHERE chat_room_action_id = ANY($1::uuid[])
`

func (q *Queries) PluralDeleteChatRoomActions(ctx context.Context, chatRoomActionIds []uuid.UUID) (int64, error) {
	result, err := q.db.Exec(ctx, pluralDeleteChatRoomActions, chatRoomActionIds)
	if err != nil {
		return 0, err
	}
	return result.RowsAffected(), nil
}
