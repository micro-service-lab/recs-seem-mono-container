name: Test

on:
  workflow_call:
  workflow_dispatch:

env:
  db_host: localhost
  db_port: 5432
  db_user: postgres
  db_password: postgres
  db_name: mono-db
  db_url: postgres://postgres:postgres@postgres:5432/mono-db
  redis_host: localhost
  redis_port: 6379

jobs:
  test-go:
    name: Test go files
    runs-on: ubuntu-latest
    services:
      postgres:
        # Docker Hub image
        image: postgres:16
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: ${{ env.db_password }}
          POSTGRES_USER: ${{ env.db_user }}
          POSTGRES_DB: ${{ env.db_name }}
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"
          check-latest: true
      - name: Download go modules
        run: go mod download
      - name: Setup aqua
        uses: aquaproj/aqua-installer@v3.0.0
        with:
          aqua_version: v2.25.1
          policy_allow: true
      - name: Test go files
        run: |
          go clean -testcache
          gotestsum ./... -- -race -coverprofile=coverage.out
        env:
          DB_HOST: ${{ env.db_host }}
          DB_PORT: ${{ env.db_port }}
          DB_USER: ${{ env.db_user }}
          DB_PASSWORD: ${{ env.db_password }}
          DB_DB: ${{ env.db_name }}
          DB_URL: ${{ env.db_url }}
          REDIS_HOST: ${{ env.redis_host }}
          REDIS_PORT: ${{ env.redis_port }}
      - name: report coverage
        uses: k1LoW/octocov-action@v1
